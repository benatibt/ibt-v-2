/* =================================================
   IBT – MINIMAL FRONT END STYLE SHEET
   Purpose: minimal structural helpers only.
   Keep colours, typography and hover effects in
   theme.json where ever possible.
   ================================================= */


   /* =================================================
   IBT – WordPress 6.8 Safe Defaults
   Purpose: small helpers to avoid common layout
   gotchas while keeping most design in theme.json.
   ================================================= */

/* 1. Responsive media
   Make sure images, videos, iframes never overflow
   their container even if a block forgets to set width.
   Core tries to do this, but some embeds slip through. */
img, video, iframe, embed, object {
    max-width: 100%;
    height: auto;
    display: block;
}

/* 2. Block gap fallback
   Guarantee a minimal vertical gap between direct
   children of a Group if the blockGap variable
   isn’t applied (old content, rogue plugins, etc.). */
.wp-block-group > * + * {
    margin-top: var(--wp--preset--spacing--m);
}

/* 3. Default margin reset
   Strip default top/bottom margins from basic text
   elements so spacing is always controlled by
   theme.json or blockGap, not browser defaults. */
p, h1, h2, h3, h4, h5, h6, ul, ol {
    margin-top: 0;
    margin-bottom: 0;
}

/* 4. Anchor scroll margin
   Prevent headings with IDs from hiding under the
   sticky header when used as anchor targets. Adjust
   the value if the sticky header height changes. */
h1[id], h2[id], h3[id], h4[id], h5[id], h6[id] {
    scroll-margin-top: var(--wp--preset--spacing--l);
}

/* 5. Content width + wide/full support for WP6.8 */
/* .alignwide{max-width:var(--wp--style--global--wide-size);margin-left:auto;margin-right:auto}
.alignfull{max-width:none}
.is-layout-constrained > .alignwide > *{max-width:inherit}
.is-layout-constrained > .alignfull > *{max-width:none}

/* Logic of 5
IF block has class "alignwide"
    // Container grows to wideSize
    container width = wideSize
    IF child has no explicit alignment
        // Child inherits parent width (wideSize)
        child max-width = inherit
    ELSE
        // Child aligned normal or full => follow its own alignment rules
        (handled by core/global styles)

ELSE IF block has class "alignfull"
    // Container spans full viewport
    container width = 100% (no max)
    IF child has no explicit alignment
        // Let child also span full width
        child max-width = none
    ELSE
        // Child aligned normal or wide => follow its own alignment rules
        (handled by core/global styles)

ELSE
    // No wide/full class
    container width = contentSize (core default)
    children stay at contentSize unless explicitly aligned
*/



/* =================================================
   End of safe defaults
   Keep colours, typography and most spacing in
   theme.json for easy future changes.
   ================================================= */

/* =================================================
   IBT – Implement heading size & spacing.
   In css as WP6.8 doesn't support level in json
   ================================================= */

h1 {
    font-size: var(--wp--preset--font-size--xl);
    font-weight: 700;
    margin-top: var(--wp--preset--spacing--xl);
    margin-bottom: 0;
}

h2 {
    font-size: var(--wp--preset--font-size--l);
    font-weight: 600;
    margin-top: var(--wp--preset--spacing--l);
    margin-bottom: 0;
}

h3 {
    font-size: var(--wp--preset--font-size--m);
    font-weight: 600;
    margin-top: var(--wp--preset--spacing--l);
    margin-bottom: 0;
}

h4 {
    font-size: var(--wp--preset--font-size--m);
    font-weight: 500;
    letter-spacing: 0.02em;
    margin-top: var(--wp--preset--spacing--m);
    margin-bottom: 0;
}

h5 {
    font-size: var(--wp--preset--font-size--m);
    font-weight: 400;
    letter-spacing: 0.02em;
    margin-top: var(--wp--preset--spacing--m);
    margin-bottom: 0;
}

h6 {
    font-size: var(--wp--preset--font-size--m);
    font-weight: 300;
    margin-top: var(--wp--preset--spacing--m);
    margin-bottom: 0;
}




/* =================================================
   END OF MINIMAL FRONT END STYLE SHEET
   ================================================= */
